{
  "uid" : "e60038101fdfcc8c",
  "name" : "test_fun",
  "fullName" : "test_case#test_fun",
  "historyId" : "6f53166915c3706e58b93e09ccee851b",
  "time" : {
    "start" : 1610630976903,
    "stop" : 1610630976904,
    "duration" : 1
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 4 == function_fixture\n +  where 4 = fun(1)",
  "statusTrace" : "@pytest.mark.usefixtures(\"function_fixture\")\n    def test_fun():\n        print(\"=====我是测试函数========\");\n>       assert fun(1)==function_fixture;\nE       assert 4 == function_fixture\nE        +  where 4 = fun(1)\n\ntest_case.py:48: AssertionError",
  "flaky" : true,
  "beforeStages" : [ {
    "name" : "function_fixture",
    "time" : {
      "start" : 1610630976903,
      "stop" : 1610630976903,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 4 == function_fixture\n +  where 4 = fun(1)",
    "statusTrace" : "@pytest.mark.usefixtures(\"function_fixture\")\n    def test_fun():\n        print(\"=====我是测试函数========\");\n>       assert fun(1)==function_fixture;\nE       assert 4 == function_fixture\nE        +  where 4 = fun(1)\n\ntest_case.py:48: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "460122ddcb1a7ef3",
      "name" : "stdout",
      "source" : "460122ddcb1a7ef3.txt",
      "type" : "text/plain",
      "size" : 97
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "function_fixture::0",
    "time" : {
      "start" : 1610630976906,
      "stop" : 1610630976906,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('function_fixture')"
  }, {
    "name" : "suite",
    "value" : "test_case"
  }, {
    "name" : "host",
    "value" : "yantianpeng.local"
  }, {
    "name" : "thread",
    "value" : "28074-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_case"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "cb129ffdcb87578d",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 4 == function_fixture\n +  where 4 = fun(1)",
      "time" : {
        "start" : 1610630976590,
        "stop" : 1610630976590,
        "duration" : 0
      }
    }, {
      "uid" : "e8a5345a3c564ca3",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 4 == function_fixture\n +  where 4 = fun(1)",
      "time" : {
        "start" : 1610630976590,
        "stop" : 1610630976590,
        "duration" : 0
      }
    }, {
      "uid" : "dd77bf47114df5f2",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 4 == function_fixture\n +  where 4 = fun(1)",
      "time" : {
        "start" : 1610630976235,
        "stop" : 1610630976236,
        "duration" : 1
      }
    }, {
      "uid" : "7b3b30c472780870",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 4 == function_fixture\n +  where 4 = fun(1)",
      "time" : {
        "start" : 1610630976235,
        "stop" : 1610630976236,
        "duration" : 1
      }
    }, {
      "uid" : "dec3b8ffd3be648a",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 4 == function_fixture\n +  where 4 = fun(1)",
      "time" : {
        "start" : 1610630976235,
        "stop" : 1610630976236,
        "duration" : 1
      }
    }, {
      "uid" : "7ca101950722e571",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 4 == function_fixture\n +  where 4 = fun(1)",
      "time" : {
        "start" : 1610630975798,
        "stop" : 1610630975798,
        "duration" : 0
      }
    }, {
      "uid" : "80ae833a6e4264dd",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 4 == function_fixture\n +  where 4 = fun(1)",
      "time" : {
        "start" : 1610630975798,
        "stop" : 1610630975798,
        "duration" : 0
      }
    }, {
      "uid" : "11740f17036910b7",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 4 == function_fixture\n +  where 4 = fun(1)",
      "time" : {
        "start" : 1610630975798,
        "stop" : 1610630975798,
        "duration" : 0
      }
    }, {
      "uid" : "6776b61bf6184b74",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 4 == function_fixture\n +  where 4 = fun(1)",
      "time" : {
        "start" : 1610630975798,
        "stop" : 1610630975798,
        "duration" : 0
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "@pytest.mark.usefixtures('function_fixture')" ]
  },
  "source" : "e60038101fdfcc8c.json",
  "parameterValues" : [ ]
}