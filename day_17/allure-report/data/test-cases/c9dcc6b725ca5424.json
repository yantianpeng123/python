{
  "uid" : "c9dcc6b725ca5424",
  "name" : "test_two",
  "fullName" : "test_class.TestClass#test_two",
  "historyId" : "cca081f1c320efa44fffe5d884236360",
  "time" : {
    "start" : 1610630976958,
    "stop" : 1610630976958,
    "duration" : 0
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False\n +  where False = hasattr('hello', 'check')",
  "statusTrace" : "self = <test_class.TestClass object at 0x10c4104c0>\n\n    def test_two(self):\n        x = \"hello\";\n>       assert  hasattr(x,\"check\");\nE       AssertionError: assert False\nE        +  where False = hasattr('hello', 'check')\n\ntest_class.py:22: AssertionError",
  "flaky" : true,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "test_class"
  }, {
    "name" : "subSuite",
    "value" : "TestClass"
  }, {
    "name" : "host",
    "value" : "yantianpeng.local"
  }, {
    "name" : "thread",
    "value" : "28074-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_class"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "5ba7a133a8dbad0d",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert False\n +  where False = hasattr('hello', 'check')",
      "time" : {
        "start" : 1610630976880,
        "stop" : 1610630976880,
        "duration" : 0
      }
    }, {
      "uid" : "96d811a9bdad473f",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert False\n +  where False = hasattr('hello', 'check')",
      "time" : {
        "start" : 1610630976880,
        "stop" : 1610630976880,
        "duration" : 0
      }
    }, {
      "uid" : "8bf624f10abc2000",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert False\n +  where False = hasattr('hello', 'check')",
      "time" : {
        "start" : 1610630976568,
        "stop" : 1610630976568,
        "duration" : 0
      }
    }, {
      "uid" : "d69c6eb1b7343c5a",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert False\n +  where False = hasattr('hello', 'check')",
      "time" : {
        "start" : 1610630976568,
        "stop" : 1610630976568,
        "duration" : 0
      }
    }, {
      "uid" : "a6f9a25124c1d042",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert False\n +  where False = hasattr('hello', 'check')",
      "time" : {
        "start" : 1610630976568,
        "stop" : 1610630976568,
        "duration" : 0
      }
    }, {
      "uid" : "c53d03afeec419df",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert False\n +  where False = hasattr('hello', 'check')",
      "time" : {
        "start" : 1610630976211,
        "stop" : 1610630976211,
        "duration" : 0
      }
    }, {
      "uid" : "769796d88f77deb5",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert False\n +  where False = hasattr('hello', 'check')",
      "time" : {
        "start" : 1610630976211,
        "stop" : 1610630976211,
        "duration" : 0
      }
    }, {
      "uid" : "60843d7e1100091",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert False\n +  where False = hasattr('hello', 'check')",
      "time" : {
        "start" : 1610630976211,
        "stop" : 1610630976211,
        "duration" : 0
      }
    }, {
      "uid" : "7051a46d10d95007",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert False\n +  where False = hasattr('hello', 'check')",
      "time" : {
        "start" : 1610630976211,
        "stop" : 1610630976211,
        "duration" : 0
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "c9dcc6b725ca5424.json",
  "parameterValues" : [ ]
}